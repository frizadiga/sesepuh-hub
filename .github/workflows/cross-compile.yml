name: Cross-Platform Build

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Define the target platforms
        include:
          - goos: linux
            goarch: amd64
            output: sesepuh-hub-linux-amd64
          - goos: linux
            goarch: arm64
            output: sesepuh-hub-linux-arm64
          - goos: windows
            goarch: amd64
            output: sesepuh-hub-windows-amd64.exe
          - goos: windows
            goarch: arm64
            output: sesepuh-hub-windows-arm64.exe
          - goos: darwin
            goarch: amd64
            output: sesepuh-hub-darwin-amd64
          - goos: darwin
            goarch: arm64
            output: sesepuh-hub-darwin-arm64

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'  # Adjust to your Go version
        check-latest: true

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download dependencies
      run: go mod download

    - name: Run tests
      run: go test -v ./...

    - name: Build binary
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
        CGO_ENABLED: 0
      run: |
        go build -v -ldflags="-s -w" -o dist/${{ matrix.output }} .

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: sesepuh-hub-${{ matrix.goos }}-${{ matrix.goarch }}
        path: dist/${{ matrix.output }}
        retention-days: 30

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v3
      with:
        path: artifacts

    - name: Prepare release assets
      run: |
        mkdir -p release
        find artifacts -name "sesepuh-hub-*" -type f -exec cp {} release/ \;
        ls -la release/

    - name: Create checksums
      run: |
        cd release
        sha256sum * > checksums.txt
        cat checksums.txt

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          release/*
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Optional: Build with different configurations
  build-with-cgo:
    name: Build with CGO (if needed)
    runs-on: ${{ matrix.os }}
    if: false  # Set to true if you need CGO builds
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            goos: linux
            goarch: amd64
            output: sesepuh-hub-linux-amd64-cgo
          - os: windows-latest
            goos: windows
            goarch: amd64
            output: sesepuh-hub-windows-amd64-cgo.exe
          - os: macos-latest
            goos: darwin
            goarch: amd64
            output: sesepuh-hub-darwin-amd64-cgo
          - os: macos-latest
            goos: darwin
            goarch: arm64
            output: sesepuh-hub-darwin-arm64-cgo

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Install dependencies (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc-multilib

    - name: Build with CGO
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
        CGO_ENABLED: 1
      run: |
        go build -v -ldflags="-s -w" -o dist/${{ matrix.output }} .

    - name: Upload CGO artifacts
      uses: actions/upload-artifact@v3
      with:
        name: sesepuh-hub-cgo-${{ matrix.goos }}-${{ matrix.goarch }}
        path: dist/${{ matrix.output }}
